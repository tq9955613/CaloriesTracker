{"version":3,"sources":["features/order/orderSlice.js","features/order/Order.js","api/meal.js","features/menu/menuSlice.js","features/menu/Menu.js","router/index.js","App.js","reportWebVitals.js","fixtures/meals.js","store.js","server.js","index.js"],"names":["orderAdapter","createEntityAdapter","initialState","getInitialState","orderSlice","createSlice","name","reducers","orderAdded","addOne","orderDeleted","removeOne","actions","getSelectors","state","order","selectOrderById","selectById","selectOrderIds","selectIds","selectOrder","selectEntities","history","useHistory","useSelector","orderIds","length","className","to","totalCalories","Object","values","reduce","calories","renderedOrderItems","map","id","OrderItem","onClick","push","dispatch","useDispatch","meal","url","menuAdapter","status","fetchMenu","createAsyncThunk","a","axios","get","then","res","data","meals","menuAdded","newMeal","post","menuSlice","menuInit","payload","setAll","menuDeleted","extraReducers","pending","fulfilled","action","rejected","menu","selectMenuById","selectMenuIds","MenuItem","undefined","e","NewMeal","useState","newMealName","setNewMealName","newMealCalories","setNewMealCalories","type","value","placeholder","onChange","target","preventDefault","isNaN","Menu","pathname","useLocation","isNewMealOpen","setIsNewMealOpen","menuIds","loadingStatus","useEffect","renderedMenuItems","menuId","Router","activeClassName","path","Order","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","orderReducer","menuReducer","environment","server","createServer","models","Model","fixtures","serializers","application","RestSerializer","routes","this","namespace","resource","makeServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEMA,EAAeC,cAEfC,EAAeF,EAAaG,kBAE5BC,EAAaC,YAAY,CAC3BC,KAAM,QACNJ,eACAK,SAAU,CACNC,WAAYR,EAAaS,OACzBC,aAAcV,EAAaW,a,EAO/BP,EAAWQ,QAFXJ,E,EAAAA,WACAE,E,EAAAA,a,EAOAV,EAAaa,cAAa,SAAAC,GAAK,OAAIA,EAAMC,SAH7BC,E,EAAZC,WACWC,E,EAAXC,UACgBC,E,EAAhBC,eAGWjB,IAAf,Q,QCfe,aACX,IAAMkB,EAAUC,cACVR,EAAQS,YAAYJ,GACpBK,EAAWD,YAAYN,GAE7B,GAAuB,IAApBO,EAASC,OACR,OACI,sBAAKC,UAAU,SAAf,yBAEI,cAAC,IAAD,CAAMC,GAAG,QAAT,2BAKZ,IAAMC,EAAgBC,OAAOC,OAAOhB,GAAOiB,QAAO,SAACH,EAAD,UAA+BA,EAA/B,EAAiBI,WAAwC,GAErGC,EAAqBT,EAASU,KAAI,SAAAC,GACpC,OAAO,cAACC,EAAD,CAAoBD,GAAIA,GAARA,MAG3B,OACI,sBAAKT,UAAU,QAAf,UACI,sBAAKA,UAAU,QAAf,2BACSE,EADT,WAGA,qBAAKF,UAAU,QAAf,SACI,6BACKO,MAGT,wBAAQI,QAAS,kBAAMhB,EAAQiB,KAAK,UAApC,sDAOZ,SAASF,EAAT,GAA0B,IAAND,EAAK,EAALA,GACVI,EAAWC,cACXC,EAAOlB,aAAY,SAAAV,GAAK,OAAIE,EAAgBF,EAAOsB,MAErD9B,EAEAoC,EAFApC,KACA2B,EACAS,EADAT,SAGJ,OACI,+BACI,gCACI,8BACK3B,IAEL,gCACK2B,EADL,cAIJ,wBAAQK,QAAS,kBAAME,EAAS9B,EAAa0B,KAA7C,SACI,cAAC,IAAD,CAAKT,UAAU,iB,gECjEzBgB,EAAM,aCENC,EAAc3C,cACdC,EAAe0C,EAAYzC,gBAAgB,CAC7C0C,OAAQ,YAGCC,EAAYC,YACrB,gBADqC,sBAErC,8BAAAC,EAAA,sEDPmBC,IAAMC,IAAIP,GAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QCOlD,uBACYC,EADZ,EACYA,MADZ,kBAEWA,GAFX,4CAMSC,EAAYR,YACrB,iBADqC,uCAErC,WAAOS,GAAP,iBAAAR,EAAA,sEDbYK,ECcuBG,EDdfP,IAAMQ,KAAKd,EAAKU,GAAMF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QCa1D,uBACYX,EADZ,EACYA,KADZ,kBAEWA,GAFX,iCDbY,IAAAW,ICaZ,OAFqC,uDAQnCK,EAAYrD,YAAY,CAC1BC,KAAM,OACNJ,eACAK,SAAU,CACNoD,SADM,SACG7C,EAAO8C,GACZ9C,EAAM+B,OAAS,UACfD,EAAYiB,OAAO/C,EAAO8C,IAE9BE,YAAalB,EAAYjC,WAE7BoD,eAAa,mBACRjB,EAAUkB,SAAU,SAAClD,GAClBA,EAAM+B,OAAS,aAFV,cAIRC,EAAUmB,WAAY,SAACnD,EAAOoD,GAC3BtB,EAAYiB,OAAO/C,EAAOoD,EAAON,SACjC9C,EAAM+B,OAAS,UANV,cAQRC,EAAUqB,UAAW,SAACrD,GACnBA,EAAM+B,OAAS,UATV,cAWRU,EAAUU,UAAYrB,EAAYnC,QAX1B,K,EAkBbiD,EAAU9C,QAFV+C,E,EAAAA,S,KACAG,YAMAlB,EAAY/B,cAAa,SAAAC,GAAK,OAAIA,EAAMsD,SAF5BC,E,EAAZpD,WACWqD,E,EAAXnD,UAGWuC,IAAf,QCWA,SAASa,EAAT,GAAyB,IAANnC,EAAK,EAALA,GACTI,EAAWC,cACXnB,EAAUC,cAEVmB,EAAOlB,aAAY,SAAAV,GAAK,OAAIuD,EAAevD,EAAOsB,MAOxD,QAAaoC,IAAT9B,EACA,OAAO,KAZS,IAehBpC,EAEAoC,EAFApC,KACA2B,EACAS,EADAT,SAGJ,OACI,6BACI,yBAAQK,QAfhB,SAAqBmC,GACjBjC,EAAShC,EAAWkC,IACpBpB,EAAQiB,KAAK,WAaT,UACI,8BACKjC,IAEL,gCACK2B,EADL,gBAQhB,SAASyC,IAAW,IAAD,EACuBC,mBAAS,IADhC,mBACRC,EADQ,KACKC,EADL,OAE+BF,mBAAS,IAFxC,mBAERG,EAFQ,KAESC,EAFT,KAITvC,EAAWC,cAqBjB,OACI,uBAAMd,UAAU,UAAhB,UACI,sBAAKA,UAAU,OAAf,UACI,8BACI,uBACIqD,KAAK,OACLC,MAAOL,EACPM,YAAY,cACZC,SAAU,SAAAV,GAAC,OAAII,EAAeJ,EAAEW,OAAOH,YAG/C,8BACI,uBACID,KAAK,OACLC,MAAOH,EACPI,YAAY,cACZC,SAAU,SAAAV,GAAC,OAAIM,EAAmBN,EAAEW,OAAOH,eAIvD,qBAAKtD,UAAU,QAAf,SACI,wBAAQqD,KAAK,SAAS1C,QAxClC,SAAoBmC,GAChBA,EAAEY,kBAEET,GAAeU,OAAOR,KAAqBA,EAAkB,IAGjEtC,EACIe,EAAU,CACNb,KAAM,CACFpC,KAAMsE,EACN3C,UAAW6C,MAKvBD,EAAe,IACfE,EAAmB,MAwBX,SACI,cAAC,IAAD,CAASpD,UAAU,mBAOxB4D,MAzIf,WACI,IAAM/C,EAAWC,cACT+C,EAAaC,cAAbD,SAFI,EAI8Bb,oBAAS,GAJvC,mBAILe,EAJK,KAIUC,EAJV,KAKNC,EAAUpE,YAAY8C,GACtBuB,EAAgBrE,aAAY,SAAAV,GAAK,OAAIA,EAAMsD,KAAKvB,UAUtD,GARAiD,qBAAU,WAEN,OADAtD,EAASM,KACF,WACHN,EAASmB,EAAS,QAEvB,IAGa,UAAb6B,EACC,OAAO,cAAC,IAAD,CAAU5D,GAAG,UAGxB,IAAMmE,EAAoBH,EAAQzD,KAAI,SAAA6D,GAClC,OAAO,cAACzB,EAAD,CAAuBnC,GAAI4D,GAAZA,MAG1B,OACI,sBAAKrE,UAAU,OAAf,UACI,qBAAKA,UAAU,eACf,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,MAAf,UACI,oBAAIA,UAAU,WAAd,iBACA,wBACIA,UAAU,YACVW,QAAS,SAAAmC,GAAC,OAAIkB,GAAiB,SAAA7E,GAAK,OAAKA,MAF7C,SAII,cAAC,IAAD,CAAQa,UAAU,iBAGzB+D,GAAiB,cAAChB,EAAD,IAEI,SAAlBmB,EACA,+CACA,6BACKE,WCtBVE,MArCf,WACI,OACI,qBAAKtE,UAAU,MAAf,SACI,eAAC,IAAD,WACI,iCACI,gCACI,cAAC,IAAD,CACIC,GAAG,OACHsE,gBAAgB,SAFpB,kBAMA,cAAC,IAAD,CACItE,GAAG,QACHsE,gBAAgB,SAFpB,wBAQR,+BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAACC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,QAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAUvE,GAAG,WAGrB,iC,MC1BDyE,MANf,WACI,OACI,cAAC,EAAD,KCOOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QC4BCnC,EAnCF,CAGX,CAAC9D,KAAM,qBAAO2B,SAAU,KACxB,CAAC3B,KAAM,6CAAW2B,SAAU,KAC5B,CAAC3B,KAAM,iCAAS2B,SAAU,KAC1B,CAAC3B,KAAM,qBAAO2B,SAAU,KACxB,CAAC3B,KAAM,oCAAY2B,SAAU,KAC7B,CAAC3B,KAAM,oCAAY2B,SAAU,KAC7B,CAAC3B,KAAM,qCAAa2B,SAAU,KAC9B,CAAC3B,KAAM,iCAAS2B,SAAU,KAC1B,CAAC3B,KAAM,oCAAY2B,SAAU,KAC7B,CAAC3B,KAAM,oCAAY2B,SAAU,KAC7B,CAAC3B,KAAM,6CAAW2B,SAAU,KAC5B,CAAC3B,KAAM,qBAAO2B,SAAU,KACxB,CAAC3B,KAAM,uCAAU2B,SAAU,KAC3B,CAAC3B,KAAM,uCAAU2B,SAAU,KAC3B,CAAC3B,KAAM,mDAAY2B,SAAU,KAC7B,CAAC3B,KAAM,0CAAa2B,SAAU,KAC9B,CAAC3B,KAAM,oCAAY2B,SAAU,KAC7B,CAAC3B,KAAM,oCAAY2B,SAAU,KAC7B,CAAC3B,KAAM,6CAAW2B,SAAU,KAC5B,CAAC3B,KAAM,uCAAU2B,SAAU,KAC3B,CAAC3B,KAAM,uBAAS2B,SAAU,KAC1B,CAAC3B,KAAM,uBAAS2B,SAAU,KAC1B,CAAC3B,KAAM,uBAAS2B,SAAU,KAC1B,CAAC3B,KAAM,2BAAa2B,SAAU,KAC9B,CAAC3B,KAAM,0CAAa2B,SAAU,KAC9B,CAAC3B,KAAM,6BAAU2B,SAAU,IAC3B,CAAC3B,KAAM,6BAAU2B,SAAU,KAC3B,CAAC3B,KAAM,mCAAW2B,SAAU,KAC5B,CAAC3B,KAAM,uBAAS2B,SAAU,KAC1B,CAAC3B,KAAM,yCAAY2B,SAAU,MC3B/B,IAOe6E,GAPDC,YAAe,CACzBC,QAAS,CACLjG,MAAOkG,EACP7C,KAAM8C,MCLP,WAAoD,IAAD,yDAAJ,GAAI,IAA7BC,mBAA6B,MAAf,OAAe,EACpDC,EAASC,YAAa,CACxBF,cAEAG,OAAQ,CACN5E,KAAM6E,KAGRC,SAAU,CACNlE,SAQJmE,YAAa,CACTC,YAAaC,KAGjBC,OApBwB,WAqBtBC,KAAKC,UAAY,MAEjBD,KAAKE,SAAS,YCTpBC,CAAW,CAAEb,YAAa,gBAE1Bc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUrB,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJsB,SAASC,eAAe,SAM1B/B,M","file":"static/js/main.1bf3026d.chunk.js","sourcesContent":["import { createSlice, createEntityAdapter } from '@reduxjs/toolkit'\r\n\r\nconst orderAdapter = createEntityAdapter()\r\n\r\nconst initialState = orderAdapter.getInitialState()\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState,\r\n    reducers: {\r\n        orderAdded: orderAdapter.addOne,\r\n        orderDeleted: orderAdapter.removeOne,\r\n    }\r\n})\r\n\r\nexport const {\r\n    orderAdded,\r\n    orderDeleted,\r\n} = orderSlice.actions\r\n\r\nexport const {\r\n    selectById: selectOrderById,\r\n    selectIds: selectOrderIds,\r\n    selectEntities: selectOrder,\r\n} = orderAdapter.getSelectors(state => state.order)\r\n\r\nexport default orderSlice.reducer","import { Link, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    orderDeleted,\r\n    selectOrderById,\r\n    selectOrderIds,\r\n    selectOrder\r\n} from './orderSlice'\r\n\r\nimport { BsX } from \"react-icons/bs\";\r\n\r\nexport default function() {\r\n    const history = useHistory()\r\n    const order = useSelector(selectOrder)\r\n    const orderIds = useSelector(selectOrderIds)\r\n\r\n    if(orderIds.length === 0) {\r\n        return (\r\n            <div className=\"notice\">\r\n                Please order\r\n                <Link to='/menu'>Go to Menu</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const totalCalories = Object.values(order).reduce((totalCalories, {calories}) => totalCalories + calories, 0)\r\n\r\n    const renderedOrderItems = orderIds.map(id => {\r\n        return <OrderItem key={id} id={id}/>\r\n    })\r\n\r\n    return (\r\n        <div className='order'>\r\n            <div className=\"board\">\r\n                熱量: {totalCalories} Kcal\r\n            </div>\r\n            <div className=\"meals\">\r\n                <ul>\r\n                    {renderedOrderItems}\r\n                </ul>\r\n            </div>\r\n            <button onClick={() => history.push('/menu')}>\r\n                加入更多餐點\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction OrderItem({id}) {\r\n    const dispatch = useDispatch()\r\n    const meal = useSelector(state => selectOrderById(state, id))\r\n    const {\r\n        name,\r\n        calories,\r\n    } = meal\r\n    \r\n    return (\r\n        <li>\r\n            <div>\r\n                <div>\r\n                    {name}\r\n                </div>\r\n                <div>\r\n                    {calories} Kcal\r\n                </div>\r\n            </div>\r\n            <button onClick={() => dispatch(orderDeleted(id))}>\r\n                <BsX className=\"iconBtn\"/>\r\n            </button>\r\n        </li>\r\n    )\r\n}","import axios from \"axios\"\r\n\r\nconst url = '/api/meals'\r\n\r\nconst getMeals = () => axios.get(url).then(res => res.data)\r\n\r\nconst addMeal = data => axios.post(url, data).then(res => res.data)\r\n\r\nexport {\r\n    getMeals,\r\n    addMeal,\r\n}","import { createSlice, createEntityAdapter, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport { addMeal, getMeals } from '../../api/meal'\r\n\r\nconst menuAdapter = createEntityAdapter()\r\nconst initialState = menuAdapter.getInitialState({\r\n    status: 'initial'\r\n})\r\n\r\nexport const fetchMenu = createAsyncThunk(\r\n    'menu/fetchAll',\r\n    async () => {\r\n        const { meals } = await getMeals()\r\n        return meals\r\n    }\r\n)\r\n\r\nexport const menuAdded = createAsyncThunk(\r\n    'menu/menuAdded',\r\n    async (newMeal) => {\r\n        const { meal } = await addMeal(newMeal)\r\n        return meal\r\n    }\r\n)\r\n\r\nconst menuSlice = createSlice({\r\n    name: 'menu',\r\n    initialState,\r\n    reducers: {\r\n        menuInit(state, payload) {\r\n            state.status = 'initial'\r\n            menuAdapter.setAll(state, payload)\r\n        },\r\n        menuDeleted: menuAdapter.removeOne,\r\n    },\r\n    extraReducers: {\r\n        [fetchMenu.pending]: (state) => {\r\n            state.status = 'loading'\r\n        },\r\n        [fetchMenu.fulfilled]: (state, action) => {\r\n            menuAdapter.setAll(state, action.payload)\r\n            state.status = 'idle'\r\n        },\r\n        [fetchMenu.rejected]: (state) => {\r\n            state.status = 'idle'\r\n        },\r\n        [menuAdded.fulfilled]: menuAdapter.addOne,\r\n    }\r\n})\r\n\r\nexport const {\r\n    menuInit,\r\n    menuDeleted,\r\n} = menuSlice.actions\r\n\r\nexport const {\r\n    selectById: selectMenuById,\r\n    selectIds: selectMenuIds,\r\n} = menuAdapter.getSelectors(state => state.menu)\r\n\r\nexport default menuSlice.reducer","import { useEffect, useState } from 'react'\r\nimport { \r\n    useParams,\r\n    useLocation,\r\n    useHistory,\r\n    Redirect\r\n} from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { orderAdded } from '../order/orderSlice'\r\nimport {\r\n    fetchMenu,\r\n    menuInit,\r\n    menuAdded,\r\n    selectMenuIds,\r\n    selectMenuById\r\n} from './menuSlice'\r\n\r\nimport { BsPlus, BsCheck } from 'react-icons/bs'\r\n\r\nfunction Menu() {\r\n    const dispatch = useDispatch()\r\n    const { pathname } = useLocation()\r\n    \r\n    const [isNewMealOpen, setIsNewMealOpen] = useState(false)\r\n    const menuIds = useSelector(selectMenuIds)\r\n    const loadingStatus = useSelector(state => state.menu.status)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchMenu())\r\n        return () => {\r\n            dispatch(menuInit([]))\r\n        }\r\n    }, [])\r\n\r\n    \r\n    if(pathname !== \"/menu\") {\r\n        return <Redirect to=\"/menu\"></Redirect>\r\n    }\r\n\r\n    const renderedMenuItems = menuIds.map(menuId => {\r\n        return <MenuItem key={menuId} id={menuId}/>\r\n    })\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"categories\"></div>\r\n            <div className=\"meals\">\r\n                <div className=\"top\">\r\n                    <h1 className=\"category\">ALL</h1>\r\n                    <button\r\n                        className=\"menuAdded\"\r\n                        onClick={e => setIsNewMealOpen(state => !state)}\r\n                    >\r\n                        <BsPlus className=\"iconBtn\"/>\r\n                    </button>\r\n                </div>\r\n                {isNewMealOpen && <NewMeal />}\r\n                {\r\n                    loadingStatus !== 'idle' ?\r\n                    <span>Loading ...</span> :\r\n                    <ul>\r\n                        {renderedMenuItems}\r\n                    </ul>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MenuItem({id}) {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const meal = useSelector(state => selectMenuById(state, id))\r\n\r\n    function handleClick(e) {\r\n        dispatch(orderAdded(meal))\r\n        history.push('/order')\r\n    }\r\n\r\n    if (meal === undefined)\r\n        return null\r\n\r\n    const {\r\n        name,\r\n        calories\r\n    } = meal\r\n\r\n    return (\r\n        <li>\r\n            <button onClick={handleClick}>\r\n                <div>\r\n                    {name}\r\n                </div>\r\n                <div>\r\n                    {calories} Kcal\r\n                </div>\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction NewMeal() {\r\n    const [newMealName, setNewMealName] = useState(\"\")\r\n    const [newMealCalories, setNewMealCalories] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    function createMeal(e) {\r\n        e.preventDefault();\r\n\r\n        if(!newMealName || isNaN(+newMealCalories) || +newMealCalories < 0)\r\n            return\r\n\r\n        dispatch(\r\n            menuAdded({\r\n                meal: {\r\n                    name: newMealName, \r\n                    calories: +newMealCalories,\r\n                }\r\n            })\r\n        )\r\n        \r\n        setNewMealName(\"\")\r\n        setNewMealCalories(\"\")\r\n    }\r\n\r\n    return (\r\n        <form className=\"newMeal\">\r\n            <div className=\"left\">\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newMealName}\r\n                        placeholder=\"New Meal...\"\r\n                        onChange={e => setNewMealName(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newMealCalories}\r\n                        placeholder=\"Calories...\"\r\n                        onChange={e => setNewMealCalories(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                <button type=\"submit\" onClick={createMeal}>\r\n                    <BsCheck className=\"iconBtn\"/>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Menu","import { BrowserRouter, Switch, Route, Redirect, NavLink } from 'react-router-dom'\r\nimport Order from '../features/order/Order'\r\nimport Menu from '../features/menu/Menu'\r\n\r\nfunction Router() {\r\n    return (\r\n        <div className=\"app\">\r\n            <BrowserRouter>\r\n                <header>\r\n                    <nav>\r\n                        <NavLink\r\n                            to=\"menu\"\r\n                            activeClassName=\"active\"\r\n                        >\r\n                            Menu\r\n                        </NavLink>\r\n                        <NavLink\r\n                            to=\"order\"\r\n                            activeClassName=\"active\"\r\n                        >\r\n                            Order\r\n                        </NavLink>\r\n                    </nav>\r\n                </header>\r\n                <main>\r\n                    <Switch>\r\n                        <Route path=\"/order\">\r\n                            <Order/>\r\n                        </Route>\r\n                        <Route path=\"/menu\">\r\n                            <Menu/>\r\n                        </Route>\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </main>\r\n                <footer></footer>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Router","import Router from './router'\r\nimport './App.sass'\r\n\r\nfunction App() {\r\n    return (\r\n        <Router/>\r\n    )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const menu = [\r\n  // {name: \"\", calories: },\r\n  // macdonald\r\n  {name: \"大麥克\", calories: 548},\r\n  {name: \"雙層牛肉吉事堡\", calories: 467},\r\n  {name: \"嫩煎雞腿堡\", calories: 363},\r\n  {name: \"麥香雞\", calories: 360},\r\n  {name: \"麥克雞塊(4塊)\", calories: 180},\r\n  {name: \"麥克雞塊(6塊)\", calories: 270},\r\n  {name: \"麥克雞塊(10塊)\", calories: 449},\r\n  {name: \"勁辣雞腿堡\", calories: 493},\r\n  {name: \"麥脆雞翅(2塊)\", calories: 611},\r\n  {name: \"麥脆雞腿(2塊)\", calories: 747},\r\n  {name: \"黃金起司豬排堡\", calories: 347},\r\n  {name: \"麥香魚\", calories: 330},\r\n  {name: \"煙燻雞肉長堡\", calories: 381},\r\n  {name: \"薑燒豬肉長堡\", calories: 483},\r\n  {name: \"蕈菇安格斯黑牛堡\", calories: 575},\r\n  {name: \"BLT安格斯黑牛堡\", calories: 544},\r\n  {name: \"BLT辣脆雞腿堡\", calories: 554},\r\n  {name: \"BLT嫩煎雞腿堡\", calories: 455},\r\n  {name: \"凱撒辣脆雞沙拉\", calories: 347},\r\n  {name: \"義式烤雞沙拉\", calories: 248},\r\n  {name: \"薯條(小)\", calories: 265},\r\n  {name: \"薯條(中)\", calories: 376},\r\n  {name: \"薯條(大)\", calories: 529},\r\n  {name: \"冰炫風(OREO)\", calories: 352},\r\n  {name: \"勁辣香雞翅(2塊)\", calories: 292},\r\n  {name: \"玉米湯(小)\", calories: 93},\r\n  {name: \"玉米湯(大)\", calories: 140},\r\n  {name: \"可口可樂(中)\", calories: 149},\r\n  {name: \"雪碧(中)\", calories: 163},\r\n  {name: \"冰檸檬紅茶(中)\", calories: 117},\r\n]\r\n\r\nexport default menu","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport orderReducer from './features/order/orderSlice'\r\nimport menuReducer from './features/menu/menuSlice'\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        order: orderReducer,\r\n        menu: menuReducer,\r\n    },\r\n})\r\n\r\nexport default store","import { createServer, Model, RestSerializer } from \"miragejs\"\r\nimport meals from './fixtures/meals'\r\n\r\nexport function makeServer({ environment = \"test\" } = {}) {\r\n  let server = createServer({\r\n    environment,\r\n\r\n    models: {\r\n      meal: Model,\r\n    },\r\n    \r\n    fixtures: {\r\n        meals,\r\n    },\r\n\r\n    // seeds(server) {\r\n    //   server.create(\"meal\", { name: \"勁辣雞腿堡\", calories: 493 })\r\n    //   server.create(\"meal\", { name: \"雙層牛肉吉事堡\", calories: 467 })\r\n    // },\r\n    \r\n    serializers: {\r\n        application: RestSerializer,\r\n    },\r\n\r\n    routes() {\r\n      this.namespace = \"api\"\r\n        \r\n      this.resource(\"meals\")\r\n    },\r\n  })\r\n\r\n  return server\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { makeServer } from \"./server\"\r\nimport axios from \"axios\"\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nimport { menuInit, menuAdded, fetchMenu } from './features/menu/menuSlice'\r\n\r\n// if (process.env.NODE_ENV === \"development\") {\r\n//   makeServer({ environment: \"development\" })\r\n// }\r\n\r\nmakeServer({ environment: \"development\" })\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}